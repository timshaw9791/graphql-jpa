plugins {
    id 'org.springframework.boot' version '2.0.3.RELEASE'
}
apply plugin: 'groovy'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'maven'
apply plugin: 'maven-publish'



group = 'com.crygier'
version = '0.72'

jar {
    baseName = 'graphql-jpa'
    version = project.version
}
sourceCompatibility = 1.8
targetCompatibility = 1.8



repositories {
    mavenCentral()
}


configurations {
    provided
    compile.extendsFrom provided
    integTestCompile.extendsFrom testCompile
    integTestRuntime.extendsFrom testRuntime
}



dependencies {
    compile 'com.graphql-java:graphql-java:9.0'
    compile 'javax.transaction:javax.transaction-api:1.2'
    compile "org.springframework.boot:spring-boot-starter-data-jpa:2.0.3.RELEASE"
   // compile 'wzvtcsoft.embracex:bos-domain:0.88'
    compile "org.springframework.boot:spring-boot-starter-web:2.0.3.RELEASE"
    compile "org.springframework.data:spring-data-commons:2.0.3.RELEASE"
    compile "org.hibernate.common:hibernate-commons-annotations:5.0.4.Final"
    compile 'org.codehaus.groovy:groovy-all:2.4.4'


    provided 'org.hibernate.javax.persistence:hibernate-jpa-2.1-api:1.0.0.Final'

    testCompile "org.springframework.boot:spring-boot-starter:2.0.3.RELEASE"
    testCompile "org.springframework.boot:spring-boot-starter-test:2.0.3.RELEASE"
    testCompile 'junit:junit:4.11'
    testCompile 'org.spockframework:spock-core:1.0-groovy-2.4'
    testCompile 'org.spockframework:spock-spring:1.0-groovy-2.4'

    testCompile 'com.aliyun:aliyun-java-sdk-core:3.5.0'
    testCompile 'com.aliyun:aliyun-java-sdk-ecs:3.0.0'
    testCompile 'com.aliyun.oss:aliyun-sdk-oss:2.8.3'


    testCompile 'cglib:cglib-nodep:3.1'
    testCompile 'org.objenesis:objenesis:2.1'

    testRuntime "com.h2database:h2:1.4.190"
    //testRuntime 'org.hibernate:hibernate-validator:4.3.0.Final'
}

publishing {
	publications {
		MyPublication(MavenPublication) {
			from components.java
			groupId 'com.crygier'
    		artifactId 'graphql-jpa'
    		version project.version
            artifact sourcesJar
		}
	}

}

model {
    tasks.generatePomFileForMyPublicationPublication {
        destination = file("$buildDir/libs/${project.name}-${version}.pom")
    }

	tasks.assemble {
		dependsOn tasks.generatePomFileForMyPublicationPublication
	}
}

bootRun{
    classpath = sourceSets.test.runtimeClasspath
}
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives sourcesJar
}

eclipse {
    classpath {
         containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
         containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.8.1'
}
